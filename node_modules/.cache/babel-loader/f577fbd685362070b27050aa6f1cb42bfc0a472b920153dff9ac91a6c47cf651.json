{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT PROJECT\\\\SLOT_Machine\\\\src\\\\Slotmch.jsx\",\n  _s = $RefreshSig$();\n// // PROJECT-1 (slotmachine)\n// import React from 'react';\n// const SlotM=(props)=>{\n//     // let x='ðŸ˜‚';\n//     // let y='ðŸ˜‚';\n//     // let z='ðŸ˜‚';\n// // let x=props.x;\n// // let y=props.y;\n// // let z=props.z;\n// let {x,y,z}=props;\n//     if((x==y) && (y==z)){\n//         return(\n//             <>\n//                 <div className=\"slot_inner\">\n//                      <h1> {x} {y} {z} </h1>\n//                     <h1>This is Matching</h1>\n\n//                 </div>\n//             </>\n//         );\n//     }else{\n//         return(\n//             <>\n//                 <div className=\"slot_inner\">\n//                      <h1> {x} {y} {z}</h1>\n//                     <h1>This is not Matching</h1>\n\n//                 </div>\n//             </>\n//         );\n\n//     }\n// };\n// export default SlotM;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Slotmch = () => {\n  _s();\n  const [num, setNum] = useState(0);\n  const incNum = () => {\n    setNum(num + 1);\n  };\n  const decNum = () => {\n    if (num > 0) {\n      setNum(num - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: num\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"idv\", {\n          className: \"btn_div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: incNum,\n          children: \"Increm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: decNum,\n          children: \"Decrem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Slotmch, \"5MKqXGP6lLp+2iakrsBbrl2WxXQ=\");\n_c = Slotmch;\nexport default Slotmch;\nvar _c;\n$RefreshReg$(_c, \"Slotmch\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Slotmch","_s","num","setNum","incNum","decNum","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/REACT PROJECT/SLOT_Machine/src/Slotmch.jsx"],"sourcesContent":["// // PROJECT-1 (slotmachine)\r\n// import React from 'react';\r\n// const SlotM=(props)=>{\r\n//     // let x='ðŸ˜‚';\r\n//     // let y='ðŸ˜‚';\r\n//     // let z='ðŸ˜‚';\r\n// // let x=props.x;\r\n// // let y=props.y;\r\n// // let z=props.z;\r\n// let {x,y,z}=props;\r\n//     if((x==y) && (y==z)){\r\n//         return(\r\n//             <>\r\n//                 <div className=\"slot_inner\">\r\n//                      <h1> {x} {y} {z} </h1>\r\n//                     <h1>This is Matching</h1>\r\n                    \r\n//                 </div>\r\n//             </>\r\n//         );\r\n//     }else{\r\n//         return(\r\n//             <>\r\n//                 <div className=\"slot_inner\">\r\n//                      <h1> {x} {y} {z}</h1>\r\n//                     <h1>This is not Matching</h1>\r\n                   \r\n//                 </div>\r\n//             </>\r\n//         );\r\n\r\n//     }\r\n// };\r\n// export default SlotM;\r\n\r\nimport React, { useState } from 'react'\r\n\r\nconst Slotmch=()=> {\r\n    const[num,setNum]=useState(0);\r\n    const incNum=()=>{\r\n        setNum(num+1);\r\n    }\r\n    const decNum=()=>{\r\n        if(num>0){\r\n            setNum(num-1);\r\n        }\r\n        \r\n    }\r\n  return (\r\n   <>\r\n    <div className='main_div'>\r\n       <div className='center_div'>\r\n        <h1>{num}</h1>\r\n        <idv className='btn_div'></idv>\r\n        <button onClick={incNum} >Increm</button>\r\n        <button onClick={decNum}>Decrem</button>\r\n       </div>\r\n    </div>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Slotmch"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,OAAO,GAACA,CAAA,KAAK;EAAAC,EAAA;EACf,MAAK,CAACC,GAAG,EAACC,MAAM,CAAC,GAACR,QAAQ,CAAC,CAAC,CAAC;EAC7B,MAAMS,MAAM,GAACA,CAAA,KAAI;IACbD,MAAM,CAACD,GAAG,GAAC,CAAC,CAAC;EACjB,CAAC;EACD,MAAMG,MAAM,GAACA,CAAA,KAAI;IACb,IAAGH,GAAG,GAAC,CAAC,EAAC;MACLC,MAAM,CAACD,GAAG,GAAC,CAAC,CAAC;IACjB;EAEJ,CAAC;EACH,oBACCL,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACCT,OAAA;MAAKU,SAAS,EAAC,UAAU;MAAAD,QAAA,eACtBT,OAAA;QAAKU,SAAS,EAAC,YAAY;QAAAD,QAAA,gBAC1BT,OAAA;UAAAS,QAAA,EAAKJ;QAAG;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACdd,OAAA;UAAKU,SAAS,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/Bd,OAAA;UAAQe,OAAO,EAAER,MAAO;UAAAE,QAAA,EAAE;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzCd,OAAA;UAAQe,OAAO,EAAEP,MAAO;UAAAC,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC,gBACL,CAAC;AAEN,CAAC;AAAAV,EAAA,CAvBKD,OAAO;AAAAa,EAAA,GAAPb,OAAO;AAyBb,eAAeA,OAAO;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}